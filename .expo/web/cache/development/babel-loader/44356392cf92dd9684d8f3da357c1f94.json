{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\z0040rue\\\\Documents\\\\sajat\\\\ferike\\\\mobil\\\\my-app\\\\components\\\\CustomTextInput.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\n\nvar CustomTextInput = function (_Component) {\n  _inherits(CustomTextInput, _Component);\n\n  var _super = _createSuper(CustomTextInput);\n\n  function CustomTextInput() {\n    _classCallCheck(this, CustomTextInput);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CustomTextInput, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: [CustomTextInputStyle.mainBlock, this.props.containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: CustomTextInputStyle.textboxBlock,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        textColor: Colors.brandText,\n        style: [CustomTextInputStyle.textInput, this.props.style],\n        labelFontSize: 12,\n        autoCapitalize: false,\n        editable: this.props.editable,\n        value: this.props.value,\n        onChangeText: this.props.onChangeText,\n        placeholder: this.props.placeHolder,\n        placeholderTextColor: Colors.placeHolderText,\n        autoFocus: this.props.autoFocus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return CustomTextInput;\n}(Component);\n\nCustomTextInput.propTypes = {\n  text: PropTypes.string\n};\nexport { CustomTextInput as default };","map":{"version":3,"sources":["C:/Users/z0040rue/Documents/sajat/ferike/mobil/my-app/components/CustomTextInput.js"],"names":["React","Component","CustomTextInput","CustomTextInputStyle","mainBlock","props","containerStyle","textboxBlock","Colors","brandText","textInput","style","editable","value","onChangeText","placeHolder","placeHolderText","autoFocus","propTypes","text","PropTypes","string"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;IAQqBC,e;;;;;;;;;;;;;WAIpB,kBAAS;AACJ,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACC,oBAAoB,CAACC,SAAtB,EAAiC,KAAKC,KAAL,CAAWC,cAA5C,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,oBAAoB,CAACI,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,SAAS,EAAEC,MAAM,CAACC,SADpB;AAEE,QAAA,KAAK,EAAE,CAACN,oBAAoB,CAACO,SAAtB,EAAgC,KAAKL,KAAL,CAAWM,KAA3C,CAFT;AAGE,QAAA,aAAa,EAAE,EAHjB;AAIE,QAAA,cAAc,EAAE,KAJlB;AAKE,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWO,QALvB;AAME,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWQ,KANpB;AAOE,QAAA,YAAY,EAAE,KAAKR,KAAL,CAAWS,YAP3B;AAQE,QAAA,WAAW,EAAE,KAAKT,KAAL,CAAWU,WAR1B;AASE,QAAA,oBAAoB,EAAEP,MAAM,CAACQ,eAT/B;AAUE,QAAA,SAAS,EAAE,KAAKX,KAAL,CAAWY,SAVxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAiBD;;;;EAtBwChB,S;;AAAxBC,e,CACVgB,S,GAAY;AAClBC,EAAAA,IAAI,EAAEC,SAAS,CAACC;AADE,C;SADFnB,e","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport {\r\n  View,\r\n  Platform,\r\n  TextInput\r\n} from 'react-native';\r\n\r\nexport default class CustomTextInput extends Component {\r\n    static propTypes = {\r\n     text: PropTypes.string,\r\n   }\r\n render() {\r\n      return(\r\n        <View style={[CustomTextInputStyle.mainBlock, this.props.containerStyle]}>\r\n          <View style={CustomTextInputStyle.textboxBlock}>\r\n            <TextInput\r\n              textColor={Colors.brandText}\r\n              style={[CustomTextInputStyle.textInput,this.props.style]}\r\n              labelFontSize={12}\r\n              autoCapitalize={false}\r\n              editable={this.props.editable}\r\n              value={this.props.value}\r\n              onChangeText={this.props.onChangeText}\r\n              placeholder={this.props.placeHolder}\r\n              placeholderTextColor={Colors.placeHolderText}\r\n              autoFocus={this.props.autoFocus} />\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n}\r\n  \r\n"]},"metadata":{},"sourceType":"module"}