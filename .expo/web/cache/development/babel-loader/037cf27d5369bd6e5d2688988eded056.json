{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\z0040rue\\\\Documents\\\\sajat\\\\ferike\\\\mobil\\\\my-app\\\\node_modules\\\\react-native-highlight-words\\\\index.js\";\nvar _excluded = [\"autoEscape\", \"highlightStyle\", \"searchWords\", \"textToHighlight\", \"sanitize\", \"style\"];\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { findAll } from 'highlight-words-core';\nimport PropTypes from 'prop-types';\nHighlighter.propTypes = {\n  autoEscape: PropTypes.bool,\n  highlightStyle: Text.propTypes.style,\n  searchWords: PropTypes.arrayOf(PropTypes.string).isRequired,\n  textToHighlight: PropTypes.string.isRequired,\n  sanitize: PropTypes.func,\n  style: Text.propTypes.style\n};\nexport default function Highlighter(_ref) {\n  var _this = this;\n\n  var autoEscape = _ref.autoEscape,\n      highlightStyle = _ref.highlightStyle,\n      searchWords = _ref.searchWords,\n      textToHighlight = _ref.textToHighlight,\n      sanitize = _ref.sanitize,\n      style = _ref.style,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var chunks = findAll({\n    textToHighlight: textToHighlight,\n    searchWords: searchWords,\n    sanitize: sanitize,\n    autoEscape: autoEscape\n  });\n  return React.createElement(Text, _extends({\n    style: style\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), chunks.map(function (chunk, index) {\n    var text = textToHighlight.substr(chunk.start, chunk.end - chunk.start);\n    return !chunk.highlight ? text : React.createElement(Text, {\n      key: index,\n      style: chunk.highlight && highlightStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, text);\n  }));\n}","map":{"version":3,"sources":["C:/Users/z0040rue/Documents/sajat/ferike/mobil/my-app/node_modules/react-native-highlight-words/index.js"],"names":["React","findAll","PropTypes","Highlighter","propTypes","autoEscape","bool","highlightStyle","Text","style","searchWords","arrayOf","string","isRequired","textToHighlight","sanitize","func","props","chunks","map","chunk","index","text","substr","start","end","highlight"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAAQC,OAAR,QAAsB,sBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEAC,WAAW,CAACC,SAAZ,GAAwB;AACpBC,EAAAA,UAAU,EAAEH,SAAS,CAACI,IADF;AAEpBC,EAAAA,cAAc,EAAEC,IAAI,CAACJ,SAAL,CAAeK,KAFX;AAGpBC,EAAAA,WAAW,EAAER,SAAS,CAACS,OAAV,CAAkBT,SAAS,CAACU,MAA5B,EAAoCC,UAH7B;AAIpBC,EAAAA,eAAe,EAAEZ,SAAS,CAACU,MAAV,CAAiBC,UAJd;AAKpBE,EAAAA,QAAQ,EAAEb,SAAS,CAACc,IALA;AAMpBP,EAAAA,KAAK,EAAED,IAAI,CAACJ,SAAL,CAAeK;AANF,CAAxB;AAaA,eAAe,SAASN,WAAT,OAQZ;AAAA;;AAAA,MAPCE,UAOD,QAPCA,UAOD;AAAA,MANCE,cAMD,QANCA,cAMD;AAAA,MALCG,WAKD,QALCA,WAKD;AAAA,MAJCI,eAID,QAJCA,eAID;AAAA,MAHCC,QAGD,QAHCA,QAGD;AAAA,MAFCN,KAED,QAFCA,KAED;AAAA,MADIQ,KACJ;;AACC,MAAMC,MAAM,GAAGjB,OAAO,CAAC;AAACa,IAAAA,eAAe,EAAfA,eAAD;AAAkBJ,IAAAA,WAAW,EAAXA,WAAlB;AAA+BK,IAAAA,QAAQ,EAARA,QAA/B;AAAyCV,IAAAA,UAAU,EAAVA;AAAzC,GAAD,CAAtB;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI;AAAb,KAAwBQ,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKC,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC1B,QAAMC,IAAI,GAAGR,eAAe,CAACS,MAAhB,CAAuBH,KAAK,CAACI,KAA7B,EAAoCJ,KAAK,CAACK,GAAN,GAAYL,KAAK,CAACI,KAAtD,CAAb;AAEA,WAAQ,CAACJ,KAAK,CAACM,SAAR,GACDJ,IADC,GAGC,oBAAC,IAAD;AACI,MAAA,GAAG,EAAED,KADT;AAEI,MAAA,KAAK,EAAED,KAAK,CAACM,SAAN,IAAmBnB,cAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKe,IAJL,CAHR;AAUH,GAbA,CADL,CADJ;AAkBH","sourcesContent":["import React from 'react';\nimport {Text} from 'react-native';\nimport {findAll} from 'highlight-words-core';\nimport PropTypes from 'prop-types';\n\nHighlighter.propTypes = {\n    autoEscape: PropTypes.bool,\n    highlightStyle: Text.propTypes.style,\n    searchWords: PropTypes.arrayOf(PropTypes.string).isRequired,\n    textToHighlight: PropTypes.string.isRequired,\n    sanitize: PropTypes.func,\n    style: Text.propTypes.style\n};\n\n/**\n* Highlights all occurrences of search terms (searchText) within a string (textToHighlight).\n* This function returns an array of strings and <Text> elements (wrapping highlighted words).\n*/\nexport default function Highlighter({\n    autoEscape,\n    highlightStyle,\n    searchWords,\n    textToHighlight,\n    sanitize,\n    style,\n    ...props\n}) {\n    const chunks = findAll({textToHighlight, searchWords, sanitize, autoEscape});\n\n    return (\n        <Text style={style} {...props}>\n            {chunks.map((chunk, index) => {\n                const text = textToHighlight.substr(chunk.start, chunk.end - chunk.start);\n\n                return (!chunk.highlight)\n                    ? text\n                    : (\n                        <Text\n                            key={index}\n                            style={chunk.highlight && highlightStyle}\n                        >\n                            {text}\n                        </Text>\n                    );\n            })}\n        </Text>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}